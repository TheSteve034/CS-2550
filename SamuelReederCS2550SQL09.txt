--1
SELECT stu.STUDENT_ID, stu.LAST_NAME, stu.FIRST_NAME, stu.EMPLOYER
FROM SECTION s JOIN  ENROLLMENT e
ON s.SECTION_ID = e.SECTION_ID
JOIN STUDENT stu
ON e.STUDENT_ID = stu.STUDENT_ID
GROUP BY stu.STUDENT_ID, stu.LAST_NAME, stu.FIRST_NAME, stu.EMPLOYER
HAVING COUNT(*) =(SELECT MAX(MAX)
                  FROM (
                        SELECT COUNT(*) as MAX, e.STUDENT_ID
                        FROM SECTION s, ENROLLMENT e
                        WHERE s.SECTION_ID = e.SECTION_ID
                        GROUP BY e.STUDENT_ID
                          ));
--2
SELECT stu.ZIP, inst.FIRST_NAME, inst.LAST_NAME, inst.PHONE
FROM STUDENT stu 
LEFT OUTER JOIN ENROLLMENT enr
ON stu.STUDENT_ID = enr.STUDENT_ID
JOIN SECTION sec
ON enr.SECTION_ID = sec.SECTION_ID
JOIN INSTRUCTOR inst
ON inst.INSTRUCTOR_ID = sec.INSTRUCTOR_ID
WHERE stu.ZIP = inst.ZIP
ORDER BY inst.LAST_NAME;

--3
SELECT FIRST_NAME, LAST_NAME, z.CITY, (SELECT 'Instructor' FROM DUal) as "Role"
FROM INSTRUCTOR inst
JOIN ZIPCODE z
ON inst.ZIP = z.ZIP
WHERE z.ZIP = 10025
UNION ALL
SELECT FIRST_NAME, LAST_NAME, z.CITY, (SELECT 'Student' FROM DUal) as "Role" 
FROM STUDENT stu
JOIN ZIPCODE z
ON stu.ZIP = z.ZIP
WHERE z.ZIP = 10025
ORDER BY "Role", LAST_NAME, FIRST_NAME;

--4
SELECT t1.location AS "LOCATION", t1."Sections" AS "SECTIONS",t2."Students" AS "STUDENTS"
FROM(SELECT LOCATION,COUNT(*) as "Sections"
FROM SECTION
GROUP BY LOCATION) t1
JOIN
(SELECT sec.LOCATION AS "LOCATION", COUNT(*) AS "Students"
FROM ENROLLMENT enr JOIN SECTION sec ON enr.SECTION_ID = sec.SECTION_ID
GROUP BY sec.LOCATION) t2
ON t1.LOCATION = t2.LOCATION
ORDER BY "LOCATION";

--5
SELECT GRADE_TYPE_CODE, NUMERIC_GRADE AS "GRADE"
FROM GRADE
WHERE STUDENT_ID = 112 AND SECTION_ID = 95
UNION ALL
SELECT (SELECT 'Average for student 112' AS "caption" FROM DUAL), AVG
FROM
(SELECT ROUND(AVG(NUMERIC_GRADE),2) AS "AVG"
FROM GRADE
WHERE STUDENT_ID = 112 AND SECTION_ID = 95)
ORDER BY GRADE_TYPE_CODE DESC;

--6
SELECT t2.FIRST_NAME, t2.LAST_NAME, NVL(t1.SECTIONS, 0)
FROM
(SELECT COUNT(*) AS "SECTIONS", INSTRUCTOR_ID
FROM SECTION
GROUP BY INSTRUCTOR_ID) t1
RIGHT OUTER JOIN
(SELECT FIRST_NAME, LAST_NAME, INSTRUCTOR_ID
FROM INSTRUCTOR) t2
ON t1.INSTRUCTOR_ID = t2.INSTRUCTOR_ID
ORDER BY t2.LAST_NAME;

--7
SELECT t1.COURSE_NO, cor.DESCRIPTION
FROM
(
SELECT COURSE_NO, COUNT(*)
FROM
(
SELECT DISTINCT COURSE_NO, grade_type_code
FROM
(
SELECT DISTINCT sec.COURSE_NO, t1.SECTION_ID, t1.GRADE_TYPE_CODE
FROM
(
SELECT SECTION_ID, GRADE_TYPE_CODE
FROM GRADE
) t1 
JOIN SECTION sec 
ON t1.SECTION_ID = sec.SEcTION_ID
)
)
HAVING COUNT(*) = 6
GROUP BY COURSE_NO
) t1 JOIN COURSE cor
ON t1.COURSE_NO = cor.COURSE_NO
ORDER BY COURSE_NO;

--8
SELECT DISTINCT z.ZIP, z.CITY, CASE WHEN enr.STUDENT_ID IS NOT NULL THEN 1 ELSE 0 END AS "STUDENTS"
FROM ENROLLMENT enr JOIN STUDENT stu 
ON enr.STUDENT_ID = stu.STUDENT_ID
RIGHT OUTER JOIN ZIPCODE z
ON stu.ZIP = z.ZIP
WHERE z.CITY = 'Stamford'
ORDER BY z.ZIP;

--9
SELECT cor.COURSE_NO, cor.DESCRIPTION, NVL(NumStudents, 0) AS "ENROLLMENTS"
FROM 
(SELECT course_no, description
FROM COURSE cor
WHERE cor.DESCRIPTION LIKE '%Programming%') cor
LEFT OUTER JOIN 
(SELECT course_no, COUNT(*) AS NumStudents
FROM ENROLLMENT enr JOIN SECTION sec
ON enr.SECTION_ID = sec.SECTION_ID
GROUP BY course_no) stu
ON cor.COURSE_NO = stu.COURSE_NO
ORDER BY "ENROLLMENTS" DESC;

--10
SELECT stu.FIRST_NAME, stu.LAST_NAME, SUM(CASE WHEN enr.STUDENT_ID IS NOT NULL THEN 1 ELSE 0 END)
FROM ENROLLMENT enr RIGHT OUTER JOIN STUDENT stu
ON enr.STUDENT_ID = stu.STUDENT_ID
WHERE stu.PHONE like '617%'
GROUP BY stu.FIRST_NAME, stu.LAST_NAME, enr.STUDENT_ID
ORDER BY stu.LAST_NAME, stu.FIRST_NAME;